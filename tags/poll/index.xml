<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>poll on Vincent Demeester</title>
    <link>https://vincent.demeester.fr/tags/poll/</link>
    <description>Recent content in poll on Vincent Demeester</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 23 Mar 2019 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://vincent.demeester.fr/tags/poll/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang testing â€” gotest.tools poll</title>
      <link>https://vincent.demeester.fr/posts/2019-03-23-gotest-tools-poll/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0100</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2019-03-23-gotest-tools-poll/</guid>
      <description>Let&amp;rsquo;s continue the gotest.tools serie, this time with the poll package.
 Package poll provides tools for testing asynchronous code.
 When you write test, you may test a piece of code that work asynchronously, where the state you&amp;rsquo;re expecting is gonna take a bit of time to be achieved. This is especially true when you work on networking or file-system code. And this happens a lot when you write integration (or end-to-end) test, less for unit-tests.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssd on Vincent Demeester</title>
    <link>http://vincent.demeester.fr/tags/ssd/</link>
    <description>Recent content in Ssd on Vincent Demeester</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Sun, 08 Sep 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://vincent.demeester.fr/tags/ssd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Maven Tmpfs</title>
      <link>http://vincent.demeester.fr/posts/2013-09-08-maven-tmpfs/</link>
      <pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://vincent.demeester.fr/posts/2013-09-08-maven-tmpfs/</guid>
      <description>&lt;p&gt;Je suis un utilisateur convaincu de [maven](), malgré ces défauts, le moto
&lt;strong&gt;&amp;ldquo;Convention over configuration&amp;rdquo;&lt;/strong&gt; me va vraiment bien. Que ce soit au boulot ou
à la maison, j&amp;rsquo;ai plus d&amp;rsquo;ordinateurs équipés de ssd (ou de mémoire flash) que de
disque traditionnel (mécanique ?). Pour augmenter un peu la durée de vie de
ces disques SSD, j&amp;rsquo;ai cherché à savoir comment &lt;em&gt;déporter&lt;/em&gt; le &lt;em&gt;build&lt;/em&gt; de maven
(qui, pour rappel, se passe dans le dossier &lt;code&gt;target/&lt;/code&gt;) hors du SSD ; ici ce
sera dans le dossier &lt;code&gt;/tmp/&lt;/code&gt; qui est monté en mémoire (merci &lt;code&gt;tmpfs&lt;/code&gt;),
mais on peut imaginer déporter ça sur un autre disque, etc.. Après quelques
recherches j&amp;rsquo;ai trouvés quelques inspirations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Limitations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dans la solution présentée ci-dessous les principales limitations sont
les suivantes (que j&amp;rsquo;essaierais de diminuer au fil du temp ;P) :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Il est nécessaire de modifier le pom.xml du projet ; cela ne s&amp;rsquo;appliquera
donc pas à tous les projets maven sans modification du pom.xml.&lt;/li&gt;
&lt;li&gt;Cela ne fonctionne que sur une plateforme qui support les liens
symboliques (Linux, Mac OS X, et autre UNIX).&lt;/li&gt;
&lt;li&gt;Cela ne fonctionne qu&amp;rsquo;avec Java 7 ou plus.&lt;/li&gt;
&lt;li&gt;Si vous utilisez m2e, il va gentillement gueuler et c&amp;rsquo;est moche ; pour
résoudre le problème, il faut faire un tour vers &lt;a href=&#34;http://wiki.eclipse.org/M2E_plugin_execution_not_covered&#34;&gt;M2E plugin execution
not covered&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour [maven](), le dossier &lt;code&gt;target/&lt;/code&gt; vient de la propriété
&lt;code&gt;project.build.directory&lt;/code&gt;. Dans la théorie, il suffirait de modifier (dans
&lt;code&gt;$HOME/.m2/settings.xml&lt;/code&gt;) cette propriété et le tour serait jouer.
Malheuresement ce n&amp;rsquo;est pas possible, &lt;code&gt;project.build.directory&lt;/code&gt; est une
propriété interne et n&amp;rsquo;est, à priori, pas modifiable.&lt;/p&gt;

&lt;p&gt;Notre souhait est le suivant :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Le build doit se faire dans &lt;code&gt;/tmp/m2/&lt;/code&gt;, ce qui pour un projet se traduit
par &lt;code&gt;/tmp/m2/${groupId}:${artifactId}&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Le dossier &lt;code&gt;target/&lt;/code&gt; dans les sources est un lien symbolique vers le
dossier dans &lt;code&gt;/tmp/m2/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On passe par un &lt;strong&gt;profile&lt;/strong&gt; qui n&amp;rsquo;est &lt;strong&gt;pas actif&lt;/strong&gt; par défaut (pour ne pas
faire chier le monde) mais &lt;strong&gt;activable via une propriété&lt;/strong&gt; (maven nous permet
de le faire et c&amp;rsquo;est cool &lt;code&gt;^_^&lt;/code&gt;). La propriété utilisée sera
&lt;code&gt;external.build.root&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Le code ci-dessous est repris directement de mon inspiration&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9530d562fd47526537cf94a30c56655c:inspiration&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9530d562fd47526537cf94a30c56655c:inspiration&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Il
s&amp;rsquo;occupe de créer le dossier &lt;code&gt;${groupId}:${artifactId}&lt;/code&gt; dans
&lt;code&gt;external.build.root&lt;/code&gt; et de faire le lien dans le dossier courant.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;&amp;lt;!-- […] --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;profiles&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;external-build-dir&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;activation&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;activeByDefault&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/activeByDefault&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;external.build.root&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/activation&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alexecollins.maven.plugin&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;script-maven-plugin&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;prep-work-tree&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;execute&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;initialize&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
                                        import java.nio.file.*
                                        def dir =
                                        &amp;quot;${external.build.root}/${project.groupId}:${project.artifactId}&amp;quot;
                                        println &amp;quot;using Maven dir ${dir}&amp;quot;
                                        def dirPath = Paths.get(dir)
                                        if (!Files.exists(dirPath)) {
                                        Files.createDirectories(dirPath)
                                        }
                                        def target = Paths.get(&amp;quot;${project.build.directory}&amp;quot;)
                                        if (!Files.exists(target)) {
                                        Files.createSymbolicLink(target, dirPath)
                                        }&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;drop-symlink&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;execute&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;clean&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
                                        import java.nio.file.*
                                        def target = Paths.get(&amp;quot;${project.build.directory}&amp;quot;)
                                        if (Files.isSymbolicLink(target)) {
                                        Files.delete(target)
                                        }
                                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.codehaus.groovy&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;groovy&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.8.6&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;language&amp;gt;&lt;/span&gt;groovy&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/language&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/profiles&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;&amp;lt;!-- […] --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Ainsi, il suffit ensuite d&amp;rsquo;avoir quelques choses du genre dans son
&lt;code&gt;$HOME/.m2/settings.xml&lt;/code&gt; pour que les builds qui ont ce profil se &lt;em&gt;build&lt;/em&gt;
dans &lt;code&gt;/tmp/m2/&lt;/code&gt;. On peut aussi ne rien avoir dans &lt;code&gt;$HOME/.m2/settings.xml&lt;/code&gt;
et utilise &lt;code&gt;-Dexternal.build.root=/tmp/m2/&lt;/code&gt; avec la commande &lt;code&gt;mvn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;settings&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;&amp;lt;!-- […] --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;profiles&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;build-in-ramfs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;external.build.root&amp;gt;&lt;/span&gt;/tmp/m2/&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/external.build.root&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/profiles&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;activeProfiles&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;activeProfile&amp;gt;&lt;/span&gt;build-in-ramfs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/activeProfile&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/activeProfiles&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;&amp;lt;!-- […] --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:9530d562fd47526537cf94a30c56655c:inspiration&#34;&gt;&lt;a href=&#34;http://elehack.net/writings/programming/maven-target-in-tmpfs&#34;&gt;Putting Maven build directories out-of-tree&lt;/a&gt; par &lt;a href=&#34;http://elehack.net/&#34;&gt;Michal Ekstrand&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9530d562fd47526537cf94a30c56655c:inspiration&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Vincent Demeester</title>
    <link>https://vincent.demeester.fr/tags/git/</link>
    <description>Recent content in Git on Vincent Demeester</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 31 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vincent.demeester.fr/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gestion de configuration : introduction</title>
      <link>https://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</link>
      <pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</guid>
      <description>Cela doit faire au moins 2 ans que je souhaite partager la façon dont je gère mes configurations (en anglais dotfiles). Comme j&#39;ai longtemps repoussé l&#39;échéance, probablement de peur d&#39;avoir un roman à écrire, je vais en faire une série de petits billets de blog dont celui-ci est l&#39;introduction. Nous y aborderons donc mon besoin, et mes choix. Besoin(s)  En bon geek que je suis, je suis fan des dotfiles.</description>
    </item>
    
    <item>
      <title>Maven Release Gitflow</title>
      <link>https://vincent.demeester.fr/posts/2012-07-23-maven-release-gitflow/</link>
      <pubDate>Mon, 23 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-07-23-maven-release-gitflow/</guid>
      <description>I like a lot the gitflow way of managing project. When working on maven project, there is few great plugins that helps to get the work done. One of them is maven-release-plugin.
Inspired on this gist, I&amp;rsquo;ve come with a cool way of doing things (let say we want to release a 0.1 version of an artifact) :
Prepare the pom.xml. It needs &amp;lt;scm&amp;gt; entries, &amp;lt;distributionManagement&amp;gt; entries (to know where to deploy the release artifact) and few options for the maven-release-plugin :</description>
    </item>
    
    <item>
      <title>Gitolite quick and dirty mirror</title>
      <link>https://vincent.demeester.fr/posts/2012-05-08-gitolite-quick-and-dirty-mirror/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-05-08-gitolite-quick-and-dirty-mirror/</guid>
      <description>I&amp;rsquo;m running a gitolite instance on my personal server to manage my repositories (personnal, private or public) ; and I am quickly going to share with you how I setup a quick and dirty mirror feature.
First, I am using gitolite 3. The mirroring we are going to setup is not the supported mirroring built-in. We are going to implement a simplier way to set mirror thing :
 Write a custom gitolite command ; the idea is to be able to write git-config stuff.</description>
    </item>
    
  </channel>
</rss>
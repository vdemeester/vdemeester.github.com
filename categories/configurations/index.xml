<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Configurations on Vincent Demeester</title>
    <link>http://vincent.demeester.fr/categories/configurations/</link>
    <description>Recent content in Configurations on Vincent Demeester</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 19 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://vincent.demeester.fr/categories/configurations/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Firefox hidden feature ‚Äî places in bookmarks</title>
      <link>http://vincent.demeester.fr/posts/2016-09-18-firefox-places-and-bookmarks/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://vincent.demeester.fr/posts/2016-09-18-firefox-places-and-bookmarks/</guid>
      <description>&lt;p&gt;
Je r√©alise que j&#39;utilise Firefox depuis bien plus de 10 ans maintenant
(on doit √™tre √† minimum 15 ans en fait‚Ä¶). Et je me souviens d&#39;un temps
o√π je souhaitais rendre mes &lt;i&gt;bookmarks&lt;/i&gt; (marque-pages üëº)
dynamique. Apr√®s tout ils existent de base dans Firefox (e.g. &lt;code&gt;Most
visited&lt;/code&gt;), il doit donc √™tre possible d&#39;en faire soit m√™me.
&lt;/p&gt;

&lt;p&gt;
Il fut un temps o√π c&#39;√©tait facile √† mettre en place ‚Äî ouvrir la
gestion des marques pages, chercher quelque chose et &lt;i&gt;cliquer&lt;/i&gt; sur le
bouton &lt;code&gt;save&lt;/code&gt; pour sauvegarder cette recherche en tant de bookmark
dynamique.
&lt;/p&gt;

&lt;p&gt;
&lt;span class=&#34;underline&#34;&gt;Note&lt;/span&gt;: comme j&#39;avais grave lutt√© √† l&#39;√©poque, et que j&#39;ai encore
lutt√© cette fois ci, cet article va me servir de pense-b√™te pour le
futur.
&lt;/p&gt;

&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;Places&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
C&#39;est le petit nom que poss√®de cette fonctionnalit√© dans le c≈ìur de
Firefox. C&#39;est un nom relativement commun, du coup √ßa n&#39;aide pas trop
la recherche d&#39;information‚Ä¶ Le meilleur endroit pour se documenter
reste alors le &lt;a href=&#34;https://developer.mozilla.org/&#34;&gt;Mozilla Developer Network&lt;/a&gt;‚Ä¶ 
&lt;/p&gt;

&lt;p&gt;
Et ce qu&#39;on peut lire sur cette &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/Places&#34;&gt;page&lt;/a&gt; c&#39;est :
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Places is the bookmarks and history management system introduced in
Firefox 3. It offers increased flexibility and complex querying to
make handling the places the user goes easier and more
convenient. It also includes new features including favicon storage
and the ability to annotate pages with arbitrary information.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
C&#39;est donc un m√©canisme interne qui permet d&#39;annoter des pages
(bookmarks, history, ‚Ä¶) et surtout un &lt;i&gt;requ√™tage&lt;/i&gt; plus complexe et
flexible que le syst√®me pr√©c√©dent. On peut noter √©galement que c&#39;est
arriv√© en version 3, et qu&#39;√† la date du jour, la version courante de
Firefox est la 48. En esp√©rant donc que ce soit toujours le syst√®me en
place (&lt;i&gt;spoiler alert: √ßa a l&#39;air d&#39;√™tre le cas&lt;/i&gt;).
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;images/2016/firefox-place-awesomebar-example.png&#34; alt=&#34;firefox-place-awesomebar-example.png&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;figure-number&#34;&gt;Figure 1:&lt;/span&gt; An example of places usage in the awesome bar&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Les petits &lt;i&gt;encarts&lt;/i&gt; en noir ci-dessus sont un exemple de ces
&lt;i&gt;places&lt;/i&gt;. Ici il s&#39;agit des &lt;b&gt;tags&lt;/b&gt; qui ont √©t√©s apposer sur les
bookmarks ; on voit d&#39;ailleurs que ce sont des bookmarks puisqu&#39;ils
ont une petite √©toile √† c√¥t√© du joli petit &lt;code&gt;favicon&lt;/code&gt;. Firefox a pris
les termes que j&#39;ai √©crit dans la barre d&#39;url et √† faire une recherche
dans les &lt;i&gt;places&lt;/i&gt; suivant diff√©rents crit√®res (l&#39;url, les tags pour
les bookmarks, ‚Ä¶).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;Places dans les bookmarks&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
L&#39;id√©e est d&#39;utiliser cette fonctionnalit√© pour faire des bookmarks
dynamique. Pour poser un peu de contexte, j&#39;utilise surtout la
bookmark toolbar pour acc√©der √† des pages dont j&#39;ai besoin (au hasard,
le webmail du boulot, une page pr√©cise d&#39;issues sur github, des pages
de guide/r√©f√©rence/manuel sur des outils que j&#39;utilise‚Ä¶) et √©galement
en mode &lt;i&gt;read that later&lt;/i&gt;.
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;images/2016/firefox-place-bookmark-toolbar.png&#34; alt=&#34;firefox-place-bookmark-toolbar.png&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;figure-number&#34;&gt;Figure 2:&lt;/span&gt; Ma &lt;i&gt;bookmark&lt;/i&gt; toolbar&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Par exemple, dans mon dossier &lt;code&gt;inbox&lt;/code&gt;, il y a plusieurs sous-dossiers
(en fait des dossiers dynamique, mais j&#39;y reviendrais plus tard),
genre &lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;nix&lt;/code&gt;, &lt;code&gt;golang&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, etc. Tout ce qui &lt;i&gt;tra√Æne&lt;/i&gt;
dans &lt;code&gt;inbox&lt;/code&gt; est √† lire ou √† trier (&lt;code&gt;inbox&lt;/code&gt; se r√©f√®re un peu √† ce que
l&#39;on peut voir avec GTD). Chaque sous dossier √©tait une sorte de
&lt;i&gt;filtre&lt;/i&gt; par projet, langage ou /whatever/‚Ä¶
&lt;/p&gt;

&lt;p&gt;
Nous allons donc ruser un peu et utiliser les &lt;i&gt;places&lt;/i&gt; dans nos
bookmarks pour en faire des dossiers dynamique, √† l&#39;instar de &lt;code&gt;Most
Visited&lt;/code&gt;. Pour se faire, il faut d√©j√† trouver un peu de documentation
sur l&#39;utilisation de ces fameuses &lt;i&gt;places&lt;/i&gt; au sein de bookmarks ‚Äî et
√ßa p√®che un peu‚Ä¶ Toujours sur le &lt;a href=&#34;https://developer.mozilla.org/&#34;&gt;Mozilla Developer Network&lt;/a&gt;, une page
&lt;i&gt;un peu cach√©&lt;/i&gt; nous r√©v√®le quelques informations : &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/Places/Places_query_URIs&#34;&gt;Places query URIs&lt;/a&gt;.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
You can use a &lt;code&gt;place&lt;/code&gt; URI as a bookmark. For example, if you right-click
on the toolbar and choose &#34;New Bookmark,&#34; you can enter a place URI
there to create a new query on your toolbar that, when clicked, will
reveal a popup containing the results of the query.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Victoire &lt;code&gt;\o/&lt;/code&gt;, il &lt;i&gt;suffit&lt;/i&gt; de cr√©er un bookmark avec comme &lt;code&gt;URI&lt;/code&gt;
une &lt;code&gt;place:‚Ä¶&lt;/code&gt; URI et c&#39;est gagn√©. Ainsi, un bookmark avec comme &lt;code&gt;URI&lt;/code&gt;
&lt;code&gt;place:terms=nixos&lt;/code&gt; me retournera un dossier dynamique  qui contiens
tous les liens (&lt;i&gt;history&lt;/i&gt;, &lt;i&gt;bookmarks&lt;/i&gt;, ‚Ä¶) qui contiennent le mot
&lt;code&gt;nixos&lt;/code&gt; ‚Äî en gros l&#39;√©quivalent de ce que nous aurions si nous tapions
&lt;code&gt;nixos&lt;/code&gt; dans la &lt;i&gt;awesomebar&lt;/i&gt;.
&lt;/p&gt;

&lt;p&gt;
Si l&#39;on regarde d&#39;un peu plus pr√®s &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/Places/Places_query_URIs&#34;&gt;Places query URIs&lt;/a&gt;, il y a une
longue liste de param√®tres possible. Il y en a pour presque tous les
go√ªts : le temps (utile pour afficher l&#39;historique, mais pas trop),
les visites, le type de &lt;i&gt;place&lt;/i&gt; (&lt;i&gt;bookmark&lt;/i&gt;, &lt;i&gt;history&lt;/i&gt;, ‚Ä¶), le
domaine de l&#39;√©l√©ment, le dossier dans lequel il se trouve, l&#39;&lt;code&gt;URI&lt;/code&gt;,
les tags‚Ä¶ j&#39;en passe et des meilleurs.
&lt;/p&gt;

&lt;p&gt;
Si par exemple, je souhaite n&#39;afficher que les pages visit√©s
aujourd&#39;hui, tri√©s par nombre de visites et limit√©s √† 10 r√©sultats, je
peux mettre comme &lt;code&gt;URI&lt;/code&gt; :
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-http&#34;&gt;place:queryType=0&amp;amp;sort=8&amp;amp;maxResults=10&amp;amp;beginTimeRef=1&amp;amp;beginTime=0
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Et on obtiens √ßa :
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;images/2016/firefox-place-most-visited-today.png&#34; alt=&#34;firefox-place-most-visited-today.png&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Mais revenons √† nos moutons, moi ce que je souhaite, c&#39;est faire des
dossiers dynamique par &lt;code&gt;tag&lt;/code&gt;, i.e. les tags que l&#39;on peut setter
lorsqu&#39;on ajoute un bookmark. Et √ßa tombe bien, un des param√®tres
s&#39;appelle &lt;code&gt;tag&lt;/code&gt; et fait exactement √ßa. Je souhaite √©galement pouvoir
faire des &lt;code&gt;ET&lt;/code&gt; sur mes tags ‚Äî par exemple, dans mon dossier
&lt;code&gt;inbox/nixos&lt;/code&gt; je veux tous les bookmarks qui sont taggu√©s &lt;code&gt;inbox&lt;/code&gt; &lt;b&gt;et&lt;/b&gt;
&lt;code&gt;nixos&lt;/code&gt;. Et c&#39;est simple, il suffit de lui donner les deux.
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-http&#34;&gt;place:tag=inbox&amp;amp;tag=nixos
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline3&#34;&gt;R√©trospective&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline3&#34;&gt;
&lt;p&gt;
Voil√†, vous avez maintenant tout ce qu&#39;il faut pour faire des dossiers
dynamiques dans vos bookmarks Firefox et vous organiser au mieux (
&lt;i&gt;ou pas&lt;/i&gt;). Quelques points √† noter :
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;L&#39;ic√¥ne du dossier dynamique ‚Äî ou m√™me la fonctionnalit√© √†
proprement parler= n&#39;appara√Æt pas de suite. Il faut parfois
red√©marrez Firefox pour profiter du nouveau dossier dynamique.&lt;/li&gt;
&lt;li&gt;Une fois que le bookmark est vu comme un dossier dynamique, il n&#39;est
plus possible d&#39;√©diter l&#39;&lt;code&gt;URI&lt;/code&gt;. Si vous voulez en changer un, il
faut tout bonnement le recr√©er.&lt;/li&gt;
&lt;li&gt;Bien que ce soit une fonctionnalit√© que je trouve g√©niale, il y a
peu de &lt;i&gt;presse&lt;/i&gt; sur le sujet et √† mon grand √©tonnement, aucun plugin
pour g√©rer √ßa plus proprement. Est-ce le signe qu&#39;un jour ce ne sera
plus supporter, je n&#39;en ai aucune id√©e.&lt;/li&gt;
&lt;li&gt;Un point tr√®s positif si vous utilisez Firefox Sync : √ßa marche bien
(pas vraiment √©tonnant en fait), ces dossiers se synchronise comme
le reste et seront donc √† disponible quelque soit l&#39;appareil sur lequel
vous utilisez firefox &lt;code&gt;\o/&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Gestion de configuration : introduction</title>
      <link>http://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</link>
      <pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</guid>
      <description>&lt;div class=&#34;notice&#34;&gt;Cet article est √©galement disponible sur le &lt;a href=&#34;http://blog.zenika.com/&#34;&gt;Blog de Zenika&lt;/a&gt; √† l&#39;adresse suivante : &lt;a href=&#34;http://blog.zenika.com/index.php?post/2015/08/03/Gestion-de-configuration-introduction&#34;&gt;http://blog.zenika.com/index.php?post/2015/08/03/Gestion-de-configuration-introduction&lt;/a&gt;. Cet publication me sert de mirroir / sauvegarde.&lt;/div&gt;


&lt;p&gt;
Cela doit faire au moins 2 ans que je souhaite partager la fa√ßon dont
je g√®re mes configurations (en anglais &lt;i&gt;dotfiles&lt;/i&gt;). Comme j&#39;ai
longtemps repouss√© l&#39;√©ch√©ance, probablement de peur d&#39;avoir un roman √†
√©crire, je vais en faire une s√©rie de petits billets de blog dont
celui-ci est l&#39;introduction. Nous y aborderons donc mon besoin, et mes
choix.
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;Besoin(s)&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
En bon &lt;b&gt;geek&lt;/b&gt; que je suis, je suis fan des &lt;i&gt;dotfiles&lt;/i&gt;. Les &lt;i&gt;dotfiles&lt;/i&gt;
‚Äî fichiers de configurations ‚Äî sont de petits fichiers, habituellement
dans notre dossier personnel (votre &lt;i&gt;$HOME&lt;/i&gt;), qui nous permettent de
param√©trer et personnaliser nos outils de tous les jours. C&#39;est
principalement vrai pour des outils en ligne de commande ‚Äî et √ßa tombe
bien, j&#39;adore ‚Äî mais pas uniquement limit√© √† ces derniers.
&lt;/p&gt;

&lt;p&gt;
Je vais faire un tr√®s petit apart√© sur le pourquoi de cette
personnalisation :
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;C&#39;est &lt;b&gt;fun&lt;/b&gt; √† faire et c&#39;est relativement important de mon point de vue.
&lt;/li&gt;
&lt;li&gt;C&#39;est &lt;b&gt;√©ducatif&lt;/b&gt; ou formateur ; on lit les documentations de nos
outils, leurs fonctionnalit√©s un peu cach√©es. On va souvent d√©couvrir
un peu la philosophie dans laquelle l&#39;outil a √©t√© cr√©√©. C&#39;est en
mettant les &lt;i&gt;mains dans le cambouis&lt;/i&gt; et en &lt;i&gt;foutant un gros bordel&lt;/i&gt;
que j&#39;ai le plus appris (√ßa va du &lt;i&gt;langage&lt;/i&gt; shell et d&#39;autres
langages de scripts, de POSIX, au noyau linux ou encore au LISP avec
GNU/Emacs).
&lt;/li&gt;
&lt;li&gt;Cela fait &lt;b&gt;gagner du temps&lt;/b&gt; et de mani√®re non n√©gligeable. Je suis
n√© &lt;span class=&#34;underline&#34;&gt;courageux mais terriblement fain√©ant&lt;/span&gt; (et oui c&#39;est possible
&lt;code&gt;:-P&lt;/code&gt;), j&#39;aime pas trop me r√©p√©ter quand √ßa devient un peu compliqu√©
/ chiant (e.g. &lt;code&gt;docker run monimage args&lt;/code&gt; √ßa va, &lt;code&gt;docker run&lt;/code&gt; avec
&lt;code&gt;-v /tmp:/tmp -v /var/run/docker.socket:/var/run/docker.socket [‚Ä¶]&lt;/code&gt;
et &lt;code&gt;run monimage arg1 arg2 arg3 [‚Ä¶]&lt;/code&gt; moins d√©j√†).
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Mais revenons √† nos moutons et faisons une petite liste de mes besoins, un
peu en vrac :
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;J&#39;ai plusieurs ordinateurs (laptop/desktop/serveurs) et je souhaite
avoir mes configurations &lt;b&gt;synchronis√©es&lt;/b&gt; entre ceux-ci ‚Äî et ce de
mani√®re simple, c&#39;est √† dire &lt;i&gt;une commande √† ex√©cuter&lt;/i&gt;.
&lt;/li&gt;
&lt;li&gt;C&#39;est li√© au point pr√©c√©dent mais, je ne &lt;i&gt;peux pas vivre&lt;/i&gt; sans
outil de gestion de version, comme &lt;b&gt;git&lt;/b&gt;. Il me faut donc un outil
ou ensemble d&#39;outil qui sache utiliser des outils de gestion de
version &lt;i&gt;du march√©&lt;/i&gt;.


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;./img/git-all-the-thing.jpg&#34; alt=&#34;git-all-the-thing.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;En fonction de mes ordinateurs, mes besoins de configuration
changent. Il me faut donc un outil &lt;b&gt;flexible&lt;/b&gt; qui me permette de dire
par exemple : sur ce PC j&#39;ai un serveur &lt;code&gt;Xorg&lt;/code&gt; donc j&#39;ai besoin de
mes configuration xorg, de celle de mon &lt;i&gt;window manager&lt;/i&gt;, etc. ‚Äî et
inversement sur ce serveur j&#39;ai besoin de python et haskell mais pas
de xorg..
&lt;/li&gt;
&lt;li&gt;Je ne souhaites pas avoir √† faire des liens symboliques, ou de
scripts d&#39;installation. Je trouves que √ßa rends les choses plus
compliqu√©es. Du coup il faut que je puisse avoir &lt;b&gt;plusieurs &lt;i&gt;d√©p√¥ts
de configuration&lt;/i&gt;&lt;/b&gt; (repository) qui pointent au m√™me endroit, sans
que ce soit le bordel.
&lt;/li&gt;
&lt;li&gt;Le &lt;b&gt;partage&lt;/b&gt; est important pour moi. Il en d√©coule deux choses :
&lt;ol class=&#34;org-ol&#34;&gt;
&lt;li&gt;Il faut que je puisse documenter un peu mon repository, avec un
bon vieux &lt;code&gt;README&lt;/code&gt; ; sans que chaque &lt;code&gt;README&lt;/code&gt; se marche dessus.
&lt;/li&gt;
&lt;li&gt;Il y a quelques &lt;b&gt;informations&lt;/b&gt; qui sont &lt;b&gt;personnelles&lt;/b&gt;, comme par
exemple les cl√©s ssh. Il me faut donc √™tre capable d&#39;avoir des
&lt;i&gt;d√©p√¥ts publiques&lt;/i&gt; et des &lt;i&gt;d√©p√¥ts priv√©s&lt;/i&gt;. C&#39;est grandement facilit√©
par l&#39;aspect &lt;i&gt;flexibilit√©&lt;/i&gt; &lt;code&gt;:-)&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Un bonus que je souhaite, est de pouvoir disposer de &lt;b&gt;hooks&lt;/b&gt;, un peu
√† la mani√®re de git (voir &lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks&#34;&gt;ici&lt;/a&gt;). L&#39;id√©e est de pouvoir &lt;b&gt;g√©n√©rer&lt;/b&gt; un
fichier de configuration √† partir d&#39;un ensemble de fichiers qui
viendraient de diff√©rents d√©p√¥ts. Le meilleur exemple que je peux
donner c&#39;est &lt;code&gt;~/.ssh/config&lt;/code&gt; dans lequel je vais y mettre des bouts
publiques que je souhaites partager (comme le &lt;code&gt;Host *&lt;/code&gt; avec des
trucs cool comme &lt;code&gt;ControlPersist&lt;/code&gt;, on en parlera plus tard) et des
bouts priv√©s (mes hosts priv√©s, avec mes configurations de
&lt;i&gt;rebonds&lt;/i&gt;, etc..).
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Cette liste a mis un certain temps √† se former dans ma t√™te, mais une
fois qu&#39;elle √©tait form√©e, j&#39;ai pu assez facilement faire des choix.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;Choix&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
Deux outils et un peu d&#39;organisation permettent de r√©pondre √† mes
besoins. Les deux outils sont &lt;code&gt;vcsh&lt;/code&gt; et &lt;code&gt;myrepos&lt;/code&gt; (anciennement appel√©
&lt;code&gt;mr&lt;/code&gt;), fait par respectivement Richard Hartmann et Joey Hess (tout
deux assez impliqu√© dans la communaut√© Debian).
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-1&#34;&gt;vcsh&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2-1&#34;&gt;
&lt;p&gt;
En un mot, &lt;a href=&#34;https://github.com/RichiH/vcsh&#34;&gt;vcsh&lt;/a&gt; permet de maintenir plusieurs &lt;i&gt;repository&lt;/i&gt; &lt;a href=&#34;http://git-scm.com/&#34;&gt;git&lt;/a&gt; dans
un seul dossier. Par d√©faut tous les &lt;i&gt;repository&lt;/i&gt; git maintenus par
&lt;code&gt;vcsh&lt;/code&gt; pointent vers le dossier &lt;code&gt;$HOME&lt;/code&gt;, mais il est possible
d&#39;utiliser un autre dossier.
&lt;/p&gt;

&lt;p&gt;
L&#39;id√©e est de pouvoir disposer de plusieurs repository par &lt;i&gt;famille
d&#39;application&lt;/i&gt;, par exemple &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;emacs&lt;/code&gt;, &lt;code&gt;zsh&lt;/code&gt;, etc. Cela
permet ainsi d&#39;avoir diff√©rents ensemble de configurations sur
diff√©rentes machines et pour diff√©rents utilisateurs. Cela apporte
une tr√®s grande flexibilit√© et facilite le partage de configuration
(au sein d&#39;une entreprise ou d&#39;un projet par exemple) tout en
laissant la place √† la d√©finition de configuration(s)
personnalis√©(s).
&lt;/p&gt;

&lt;p&gt;
En bonus, &lt;code&gt;vcsh&lt;/code&gt; supporte un syst√®me de hook, permettant d&#39;ex√©cuter
des commandes √† diff√©rents moments du &lt;i&gt;workflow&lt;/i&gt; ‚Äî c&#39;est la seule
partie qui manquant √† &lt;code&gt;vcsh&lt;/code&gt; de mon point de vue alors j&#39;y ai
apport√© ma petit pierre.
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;vcsh&lt;/code&gt; est la cl√© de vo√ªte de ma gestion de configuration. Sans le
travail formidable de &lt;a href=&#34;http://richardhartmann.de/&#34;&gt;Richard Hartmann&lt;/a&gt;, je ne sais pas comment je
ferais..
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-2&#34;&gt;myrepos&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2-2&#34;&gt;
&lt;p&gt;
En un mot, &lt;a href=&#34;https://myrepos.branchable.com/&#34;&gt;myrepos&lt;/a&gt; est un outil permettant de &lt;i&gt;g√©rer&lt;/i&gt; plusieurs
repository (git, subversion, mercurial, ‚Ä¶) avec une seule
commande : &lt;code&gt;mr&lt;/code&gt;. C&#39;est simple et efficace :
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;code&gt;mr u&lt;/code&gt; (ou &lt;code&gt;mr update&lt;/code&gt;) pour r√©cup√©rer les derni√®res modifications (&lt;code&gt;git pull&lt;/code&gt;,
&lt;code&gt;svn up&lt;/code&gt;, ‚Ä¶).
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mr -d $HOME/.config u&lt;/code&gt; pour r√©cup√©rer les derni√®res modifications
des repository qui sont dans &lt;code&gt;$HOME/.config&lt;/code&gt;.
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mr -j 6 u&lt;/code&gt; pour parall√©liser la r√©cup√©ration (ici 6 jobs en parall√®le).
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mr p&lt;/code&gt; pour pousser des modifications (&lt;code&gt;git push&lt;/code&gt;, ‚Ä¶).
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mr run&lt;/code&gt; pour lancer un commande (j&#39;utilise √ßa tous les jours).
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Il est √©galement possible de personnaliser les commandes √† lancer lors
d&#39;un &lt;i&gt;update&lt;/i&gt; ou autre (toutes les commandes), et m√™me en d√©finir des
nouvelles. Cela se pr√©sente comme suit :
&lt;/p&gt;


&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-conf&#34;&gt;[&lt;span style=&#34;color: #6434A3;&#34;&gt;foo&lt;/span&gt;]
&lt;span style=&#34;color: #BA36A5;&#34;&gt;checkout&lt;/span&gt; = git@github.com:joeyh/foo.git
&lt;span style=&#34;color: #BA36A5;&#34;&gt;update&lt;/span&gt; = git pull --rebase

[&lt;span style=&#34;color: #6434A3;&#34;&gt;bar&lt;/span&gt;]
&lt;span style=&#34;color: #8D8D84;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #8D8D84; font-style: italic;&#34;&gt;This repository has an upstream, which I&#39;ve forked;&lt;/span&gt;
&lt;span style=&#34;color: #8D8D84;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #8D8D84; font-style: italic;&#34;&gt;set up a remote on checkout.&lt;/span&gt;
&lt;span style=&#34;color: #BA36A5;&#34;&gt;checkout&lt;/span&gt; =
    git clone git@github.com:joeyh/bar.git
    cd bar
    git remote add upstream git@github.com:barbar/bar.git
&lt;span style=&#34;color: #8D8D84;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #8D8D84; font-style: italic;&#34;&gt;make `mr zap` integrate from upstream&lt;/span&gt;
&lt;span style=&#34;color: #BA36A5;&#34;&gt;zap&lt;/span&gt; =
    git pull upstream
    git merge upstream/master
    git push origin master

[&lt;span style=&#34;color: #6434A3;&#34;&gt;mystuff&lt;/span&gt;]
&lt;span style=&#34;color: #BA36A5;&#34;&gt;checkout&lt;/span&gt; = git@github.com:joeyh/foo.git
&lt;span style=&#34;color: #8D8D84;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #8D8D84; font-style: italic;&#34;&gt;Skip if the current user is not joey&lt;/span&gt;
&lt;span style=&#34;color: #BA36A5;&#34;&gt;skip&lt;/span&gt; = test `whoami` != joey

[&lt;span style=&#34;color: #6434A3;&#34;&gt;DEFAULT&lt;/span&gt;]
&lt;span style=&#34;color: #8D8D84;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #8D8D84; font-style: italic;&#34;&gt;Teach mr how to `mr gc` in git repos.&lt;/span&gt;
&lt;span style=&#34;color: #BA36A5;&#34;&gt;git_gc&lt;/span&gt; = git gc &lt;span style=&#34;color: #008000;&#34;&gt;&#34;$@&#34;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Une autre fonctionnalit√© qui m&#39;est totalement indispensable est ce
qu&#39;on appel les &lt;code&gt;fixup(s)&lt;/code&gt;. Il est en effet possible d&#39;ex√©cuter une ou
plusieurs commandes (shell) apr√®s un &lt;code&gt;update&lt;/code&gt; (ou via la commande
&lt;code&gt;fixup&lt;/code&gt;). C&#39;est gr√¢ce √† ce syst√®me la que je g√©n√®re mes fichiers de
configuration en provenance de plusieurs repository (comme
&lt;code&gt;$HOME/.ssh/config&lt;/code&gt; ou encore &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;).
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;myrepos&lt;/code&gt; est l&#39;exemple de l&#39;outil simple et efficace qui fait une
chose et le fait tr√®s bien, et dont je n&#39;arrive pas √† me passer
&lt;code&gt;:-D&lt;/code&gt;. Je l&#39;utilise √©galement dans plein d&#39;autres cas, comme par
exemple pour mettre √† jour mes &lt;i&gt;forks&lt;/i&gt; de projets open-source.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Et voil√†, c&#39;est tout pour cette introduction &lt;code&gt;;-)&lt;/code&gt;. La prochaine
partie se penchera sur la &lt;b&gt;structure&lt;/b&gt; que j&#39;utilise ainsi que le
repository principal qui est &lt;a href=&#34;https://github.com/vdemeester/vcsh-home&#34;&gt;&lt;b&gt;vcsh-home&lt;/b&gt;&lt;/a&gt;. Dans les parties suivantes
on parlera des autres repository et donc des configurations
sp√©cifiques pour les diff√©rents outils (comme &lt;a href=&#34;https://github.com/vdemeester/sh-config&#34;&gt;sh-config&lt;/a&gt;,
&lt;a href=&#34;https://github.com/vdemeester/emacs-config&#34;&gt;emacs-config&lt;/a&gt; ou encore &lt;a href=&#34;https://github.com/vdemeester/go-config&#34;&gt;go-config&lt;/a&gt;). On parlera aussi probablement de
&lt;code&gt;git-annex&lt;/code&gt; dans le futur.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
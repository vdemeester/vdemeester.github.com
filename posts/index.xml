<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vincent Demeester</title>
    <link>https://vincent.demeester.fr/posts/</link>
    <description>Recent content in Posts on Vincent Demeester</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Dec 2018 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://vincent.demeester.fr/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go testing style guide</title>
      <link>https://vincent.demeester.fr/posts/2018-12-16-link/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0100</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-12-16-link/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools icmd</title>
      <link>https://vincent.demeester.fr/posts/2018-09-18-gotest-tools-icmd/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-09-18-gotest-tools-icmd/</guid>
      <description>Let&amp;rsquo;s continue the gotest.tools serie, this time with the icmd package.
 Package icmd executes binaries and provides convenient assertions for testing the results.
 After file-system operations (seen in fs), another common use-case in tests is to execute a command. The reasons can be you&amp;rsquo;re testing the cli you&amp;rsquo;re currently writing or you need to setup something using a command line. A classic execution in a test might lookup like the following.</description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools fs</title>
      <link>https://vincent.demeester.fr/posts/2018-09-14-gotest-tools-fs/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-09-14-gotest-tools-fs/</guid>
      <description>Let&amp;rsquo;s continue the gotest.tools serie, this time with the fs package.
 Package fs provides tools for creating temporary files, and testing the contents and structure of a directory.
 This package is heavily using functional arguments (as we saw in functional arguments for wonderful builders). Functional arguments is, in a nutshell, a combinaison of two Go features : variadic functions (... operation in a function signature) and the fact that func are first class citizen.</description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools golden</title>
      <link>https://vincent.demeester.fr/posts/2018-09-06-gotest-tools-golden/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-09-06-gotest-tools-golden/</guid>
      <description>Let&amp;rsquo;s continue the gotest.tools serie, this time with the golden package. This is a quick follow-up on a previous golden post, but focused on the gotest.tools implementation. I&amp;rsquo;m gonna be quicker, please read that one if golden files is a new concept for you.
 Package golden provides tools for comparing large mutli-line strings.
Golden files are files in the ./testdata/ sub-directory of the package under test.
 In the previous article, we described the problem, and how to fix it by writing a small helper.</description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools skip</title>
      <link>https://vincent.demeester.fr/posts/2018-09-01-gotest-tools-skip/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-09-01-gotest-tools-skip/</guid>
      <description>Let&amp;rsquo;s continue the gotest.tools serie, this time with the skip package. This is a really simple one so this should be quick.
 skip provides functions for skipping a test and printing the source code of the condition used to skip the test.
 The package consists of only one function : If. The idea comes mainly from docker/docker integration test suite, where we wanted to skip some test (or test suites) given different context.</description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools assertions</title>
      <link>https://vincent.demeester.fr/posts/2018-08-16-gotest-tools-assertions/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-08-16-gotest-tools-assertions/</guid>
      <description>Table of Contents  Assert and Check More assert helpers cmp.Comparison  Equality with Equal and DeepEqual Errors with Error, ErrorContains and ErrorType Bonus with Panics Miscellaneous with Contains, Len and Nil Write your own Comparison  Conclusionâ€¦   
Assert and Check Both those functions accept a Comparison (we&amp;rsquo;ll check what it is later on) and fail the test when that comparison fails. The one difference is that Assert will end the test execution at immediately whereas Check will fail the test and proceed with the rest of the test case.</description>
    </item>
    
    <item>
      <title>Golang testing â€” gotest.tools introduction</title>
      <link>https://vincent.demeester.fr/posts/2018-07-28-gotest-tools-intro/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2018-07-28-gotest-tools-intro/</guid>
      <description>Let me introduce it to you this library : gotest.tools. As described in the godoc package comment, gotest.tools is a collection of packages to augment testing and support common patterns. It&amp;rsquo;s an enhanced and growing version of the initial helpers we (the docker/moby maintainers) wrote initially in docker/docker repository. We are using in quite some project here at Docker.
There is a bunch of packages that will all have their own post (linked here when available) :</description>
    </item>
    
    <item>
      <title>Golang testing â€” golden file</title>
      <link>https://vincent.demeester.fr/posts/2017-04-22-golang-testing-golden-file/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2017-04-22-golang-testing-golden-file/</guid>
      <description>Tests are all about maintainability and readability. You want the least visual noise possible and it should not be a hassle to maintain. When testing functions that output a long of string, in case of a command line output testing, readability and maintainance tend to be tricky to achieve. The problem  As an example let&#39;s say we want to test out the output of a command that displays a list as a table.</description>
    </item>
    
    <item>
      <title>Golang testing â€” functional arguments for wonderful builders</title>
      <link>https://vincent.demeester.fr/posts/2017-01-01-go-testing-functionnal-builders/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2017-01-01-go-testing-functionnal-builders/</guid>
      <description>Programming is not easy; even the best programmers are incapable of writing programs that work exactly as intended every time. Therefore an important part of the software development process is testing. Writing tests for our code is a good way to ensure quality and improve reliability.   Go programs, when properly implemented, are fairly simple to test programatically. The testing built-in library and the features of the language itself offer plenty of ways to write good tests.</description>
    </item>
    
    <item>
      <title>Firefox hidden feature â€” places in bookmarks</title>
      <link>https://vincent.demeester.fr/posts/2016-09-18-firefox-places-and-bookmarks/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2016-09-18-firefox-places-and-bookmarks/</guid>
      <description>Je rÃ©alise que j&#39;utilise Firefox depuis bien plus de 10 ans maintenant (on doit Ãªtre Ã  minimum 15 ans en faitâ€¦). Et je me souviens d&#39;un temps oÃ¹ je souhaitais rendre mes bookmarks (marque-pages ðŸ‘¼) dynamique. AprÃ¨s tout ils existent de base dans Firefox (e.g. Most visited), il doit donc Ãªtre possible d&#39;en faire soit mÃªme.  Il fut un temps oÃ¹ c&#39;Ã©tait facile Ã  mettre en place â€” ouvrir la gestion des marques pages, chercher quelque chose et cliquer sur le bouton save pour sauvegarder cette recherche en tant de bookmark dynamique.</description>
    </item>
    
    <item>
      <title>Gestion de configuration : introduction</title>
      <link>https://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</link>
      <pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2015-07-31-config-managment-intro/</guid>
      <description>Cela doit faire au moins 2 ans que je souhaite partager la faÃ§on dont je gÃ¨re mes configurations (en anglais dotfiles). Comme j&#39;ai longtemps repoussÃ© l&#39;Ã©chÃ©ance, probablement de peur d&#39;avoir un roman Ã  Ã©crire, je vais en faire une sÃ©rie de petits billets de blog dont celui-ci est l&#39;introduction. Nous y aborderons donc mon besoin, et mes choix. Besoin(s)  En bon geek que je suis, je suis fan des dotfiles.</description>
    </item>
    
    <item>
      <title>Docker 1.6 et son Ã©cosystÃ¨me</title>
      <link>https://vincent.demeester.fr/posts/2015-06-01-docker-1.6-ecosystem/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2015-06-01-docker-1.6-ecosystem/</guid>
      <description>Cet article est disponible sur le Blog de Zenika Ã  l&#39;adresse suivante : http://blog.zenika.com/index.php?post/2015/06/01/Docker-1-6-et-son-ecosysteme. Cet publication me sert de mirroir / sauvegarde. Introduction  Le 28 octobre dernier, nous avions parlÃ© de la sortie de Docker 1.3, des Ã©volutions entre la version 1 et cette derniÃ¨re et de son Ã©cosystÃ¨me. Je vous proposes de remettre Ã§a, bientÃ´t 6 mois aprÃ¨s, avec un peu le mÃªme plan : les principales nouveautÃ©s entre la version 1.</description>
    </item>
    
    <item>
      <title>Migration vers hugo</title>
      <link>https://vincent.demeester.fr/posts/2015-05-09-migration-to-hugo/</link>
      <pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2015-05-09-migration-to-hugo/</guid>
      <description>Et voilÃ , une semaine aprÃ¨s m&#39;Ãªtre remis en route sur ce blog, je fais dÃ©jÃ  une migration &amp;gt;_&amp;lt;. Je me suis rendu compte que Jekyll m&#39;Ã©nervait un peu, et comme je suis Ã  fond dans go en ce moment, j&#39;ai regardÃ© du cÃ´tÃ© des gÃ©nÃ©rateurs de sites static et Hugo a clairement retenu mon attention. Pourquoi Hugo ?   Make the Web Fun Again  Introducing Hugo, a new idea around making website creation simple again.</description>
    </item>
    
    <item>
      <title>Orgmode et Jekyll</title>
      <link>https://vincent.demeester.fr/posts/2015-05-01-orgmode-et-jekyll/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2015-05-01-orgmode-et-jekyll/</guid>
      <description>Un peu plus d&#39;un an..  .. que je n&#39;ai rien postÃ© ici. Le temps passe bien vite, mais c&#39;est plutÃ´t une bonne chose. Je crois que quelque chose me manquait pour poster ici plus souvent.   Au niveau de mes points d&#39;entrÃ©es sur le web, je compte remettre un peu en route la partie blog de ce site et tourner shortbrain.org (ou autre) en un site plus &#34;documentation&#34; en me basant sur mes notes (powered by org-mode).</description>
    </item>
    
    <item>
      <title>Docker 1.3 et son Ã©cosystÃ¨me</title>
      <link>https://vincent.demeester.fr/posts/2014-10-27-docker-1.3-ecosystem/</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2014-10-27-docker-1.3-ecosystem/</guid>
      <description>Cet article est disponible sur le Blog de Zenika Ã  l&#39;adresse suivante : http://blog.zenika.com/index.php?post/2014/10/27/Docker-1-3-et-son-ecosysteme. Cet publication me sert de mirroir / sauvegarde. Le 16 octobre dernier, Docker est passÃ© en version 1.3. C&#39;est une bonne occasion de faire un point sur ce qu&#39;apportent les mises Ã  jour qui sont sorties depuis la 1.0. Nous allons Ã©galement en profiter pour regarder les news importantes de l&#39;Ã©cosystÃ¨me Docker.
Rappel trÃ¨s rapide, Docker est une plate-forme ouverte Ã  destination des dÃ©veloppeurs et administrateurs systÃ¨mes visant Ã  faciliter la construction et le dÃ©ploiement d&#39;applications distribuÃ©es.</description>
    </item>
    
    <item>
      <title>Redesign Et RÃ©solutions</title>
      <link>https://vincent.demeester.fr/posts/2014-03-24-redesign-et-r%C3%A9solutions/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2014-03-24-redesign-et-r%C3%A9solutions/</guid>
      <description>Un tout petit post pour parler rapidement, entre autre, du redesign de vincent.demeester.fr et de mes rÃ©solutions.
Redesign Les raisons de ce redesign sont assez simple : je change d&amp;rsquo;employeur et de ville (retour sur Paris \o/). Cela fait pas mal de changement, et en voulant mettre Ã  jour la page d&amp;rsquo;accueil (ce que je n&amp;rsquo;ai toujours pas fait ;-P), j&amp;rsquo;avais envie de dÃ©mÃ©nager le site en quelques sortes.</description>
    </item>
    
    <item>
      <title>Podcasts</title>
      <link>https://vincent.demeester.fr/posts/2013-10-12-podcasts/</link>
      <pubDate>Sat, 12 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2013-10-12-podcasts/</guid>
      <description>Voici un petit billet prÃ©sentant les diffÃ©rents podcast que j&amp;rsquo;Ã©coute plus ou moins rÃ©guliÃ¨rement.
 J&amp;rsquo;Ã©coute Ã©normÃ©ment de musique et de podcast ; je passe beaucoup de temps avec des Ã©couteurs sur la tÃªte ou la chaine hifi en route. Les podcasts ont une grande place. Voici une liste plus ou moins bien triÃ©s de ceux auxquels je suis souscrit et/ou que j&amp;rsquo;Ã©coute en ce moment. Je tiendrais peut-Ãªtre ce post Ã  jour ou en crÃ©erait un nouveau sinon :-).</description>
    </item>
    
    <item>
      <title>Maven Tmpfs</title>
      <link>https://vincent.demeester.fr/posts/2013-09-08-maven-tmpfs/</link>
      <pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2013-09-08-maven-tmpfs/</guid>
      <description>Je suis un utilisateur convaincu de [maven](), malgrÃ© ces dÃ©fauts, le moto &amp;ldquo;Convention over configuration&amp;rdquo; me va vraiment bien. Que ce soit au boulot ou Ã  la maison, j&amp;rsquo;ai plus d&amp;rsquo;ordinateurs Ã©quipÃ©s de ssd (ou de mÃ©moire flash) que de disque traditionnel (mÃ©canique ?). Pour augmenter un peu la durÃ©e de vie de ces disques SSD, j&amp;rsquo;ai cherchÃ© Ã  savoir comment dÃ©porter le build de maven (qui, pour rappel, se passe dans le dossier target/) hors du SSD ; ici ce sera dans le dossier /tmp/ qui est montÃ© en mÃ©moire (merci tmpfs), mais on peut imaginer dÃ©porter Ã§a sur un autre disque, etc.</description>
    </item>
    
    <item>
      <title>Gollum Comme Wiki Personnel</title>
      <link>https://vincent.demeester.fr/posts/2012-12-16-gollum-comme-wiki-personnel/</link>
      <pubDate>Sun, 16 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-12-16-gollum-comme-wiki-personnel/</guid>
      <description>Il y a environ 4 mois j&amp;rsquo;ai eu un accident de vÃ©lo ; un traumatisme crÃ¢nien, des brulures sur la face, quelques points de sutures, un doigt cassÃ© et une hernie discale m&amp;rsquo;ont clouÃ© (et me clou encore) plus que d&amp;rsquo;habitude sur ma chaise de bureau. Le bon cÃ´tÃ© des choses, c&amp;rsquo;est que cela m&amp;rsquo;a permit de me poser et de rÃ©flÃ©chir une bonne faÃ§on d&amp;rsquo;Ãªtre efficace et organiser, au travail et Ã  la maison :-).</description>
    </item>
    
    <item>
      <title>Maven Release Gitflow</title>
      <link>https://vincent.demeester.fr/posts/2012-07-23-maven-release-gitflow/</link>
      <pubDate>Mon, 23 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-07-23-maven-release-gitflow/</guid>
      <description>I like a lot the gitflow way of managing project. When working on maven project, there is few great plugins that helps to get the work done. One of them is maven-release-plugin.
Inspired on this gist, I&amp;rsquo;ve come with a cool way of doing things (let say we want to release a 0.1 version of an artifact) :
Prepare the pom.xml. It needs &amp;lt;scm&amp;gt; entries, &amp;lt;distributionManagement&amp;gt; entries (to know where to deploy the release artifact) and few options for the maven-release-plugin :</description>
    </item>
    
    <item>
      <title>News</title>
      <link>https://vincent.demeester.fr/posts/2012-07-21-news/</link>
      <pubDate>Sat, 21 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-07-21-news/</guid>
      <description>Je suis restÃ© assez longtemps silencieux, Ã  cause du boulot entre autre. Je vais donc remÃ©dier un peu Ã  Ã§a en publiant un petit post news :-).
 Je suis fan de cyclisme. Mon vÃ©lo de course est ma seconde paire de jambes. Enfin, le mot juste serait plutÃ´t Ã©tait. Il y a quelques semaines, en rentrant du boulot, j&amp;rsquo;ai sentis un grosse vibration, puis plus moyen de tourner les pÃ©dales.</description>
    </item>
    
    <item>
      <title>Jekyll Forman Guard Bundler</title>
      <link>https://vincent.demeester.fr/posts/2012-05-13-jekyll-foreman-guard-bundler/</link>
      <pubDate>Sun, 13 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-05-13-jekyll-foreman-guard-bundler/</guid>
      <description>This post is a quick &amp;ldquo;How did I setup my Jekyll environnement ?&amp;rdquo;. We are going all the tools that are quite awesome in Ruby.
Goal The goal is simple :
 I want to be able to install any dependent Gem with a on-liner command I want to be able to run a Jekyll server that auto updates.  We are going to play with : Bundler, Guard and foreman.</description>
    </item>
    
    <item>
      <title>Gitolite quick and dirty mirror</title>
      <link>https://vincent.demeester.fr/posts/2012-05-08-gitolite-quick-and-dirty-mirror/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-05-08-gitolite-quick-and-dirty-mirror/</guid>
      <description>I&amp;rsquo;m running a gitolite instance on my personal server to manage my repositories (personnal, private or public) ; and I am quickly going to share with you how I setup a quick and dirty mirror feature.
First, I am using gitolite 3. The mirroring we are going to setup is not the supported mirroring built-in. We are going to implement a simplier way to set mirror thing :
 Write a custom gitolite command ; the idea is to be able to write git-config stuff.</description>
    </item>
    
    <item>
      <title>Reinit and Jekyll</title>
      <link>https://vincent.demeester.fr/posts/2012-05-07-reinit-and-jekyll/</link>
      <pubDate>Mon, 07 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.demeester.fr/posts/2012-05-07-reinit-and-jekyll/</guid>
      <description>Two weeks ago, my online personal server has been attacked and, somehow, died. I&amp;rsquo;m in the process of re-installation of it but I&amp;rsquo;m going to hardened a bit the security on it. Anyway, this crash meant that every piece of site I maintain has been down. That&amp;rsquo;s why I moved this identity site on the github pages, using a CNAME ; That way I can crash as much as I want my server(s), this page should still be up for a while.</description>
    </item>
    
  </channel>
</rss>